<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Samir Paul â€¢ Posts by &#34;greedy&#34; tag</title>
        <link>https://samirpaul.in</link>
        <description>Software Engineer</description>
        <language>en</language>
        <pubDate>Sun, 06 Aug 2023 02:22:53 +0530</pubDate>
        <lastBuildDate>Sun, 06 Aug 2023 02:22:53 +0530</lastBuildDate>
        <category>leetcode</category>
        <category>geeksforgeeks</category>
        <category>blog</category>
        <category>coding</category>
        <category>computer-science</category>
        <category>Binary Search</category>
        <category>caching</category>
        <category>system-design</category>
        <category>design-interview</category>
        <category>preparation</category>
        <category>study-plan</category>
        <category>computer-networks</category>
        <category>computer-networks-notes</category>
        <category>projects</category>
        <category>tutorials</category>
        <category>list-of-project-based-tutorials</category>
        <category>curated-list</category>
        <category>DSAlgo</category>
        <category>dsa-in-python</category>
        <category>data-structures-and-algorithms</category>
        <category>dp</category>
        <category>Dynamic Programming</category>
        <category>Patterns</category>
        <category>embed-musicapp</category>
        <category>music</category>
        <category>embeded</category>
        <category>music-player</category>
        <category>programmable-search</category>
        <category>Graph</category>
        <category>distributed-systems</category>
        <category>two pointers problems</category>
        <category>Greedy</category>
        <category>python</category>
        <category>python-frameworks</category>
        <category>python-libraries</category>
        <category>leetcode-solutions</category>
        <category>leetcode-solutions-cheetsheet</category>
        <category>leetcode-cheetsheet</category>
        <category>important-leetcode-solutions</category>
        <category>technical-interview</category>
        <category>interview-questions</category>
        <category>python3</category>
        <category>file-compressor</category>
        <category>flask-application</category>
        <category>python-server</category>
        <category>pdfnet</category>
        <category>pdf-compression</category>
        <category>online-pdf-compressor</category>
        <category>pdfnetpython</category>
        <category>open-external-links</category>
        <category>javascript</category>
        <category>Operating System</category>
        <category>Placements</category>
        <category>OS</category>
        <category>project</category>
        <category>pygame</category>
        <category>python-game</category>
        <category>pyshooter</category>
        <category>shooter-game</category>
        <category>Python Cheat Sheet</category>
        <category>sql</category>
        <category>nosql</category>
        <category>sharding</category>
        <category>data-partitioning</category>
        <category>certificates</category>
        <category>udemy</category>
        <category>coursera</category>
        <category>datacamp</category>
        <category>sql-joins</category>
        <category>web-development</category>
        <category>lossless-data-compression</category>
        <category>online-file-compressor</category>
        <category>txt-compressor</category>
        <category>algorithm</category>
        <category>databases</category>
        <category>short-url</category>
        <category>url-shortner</category>
        <category>networking</category>
        <item>
            <guid isPermalink="true">https://samirpaul.in/posts/leetcode-greedy-for-beginners/</guid>
            <title>LeetCode Greedy for Beginners</title>
            <link>https://samirpaul.in/posts/leetcode-greedy-for-beginners/</link>
            <category>leetcode</category>
            <category>blog</category>
            <category>coding</category>
            <category>computer-science</category>
            <category>Greedy</category>
            <pubDate>Sun, 06 Aug 2023 02:22:53 +0530</pubDate>
            <description><![CDATA[ &lt;p&gt;Greedy for practice:&lt;/p&gt;
&lt;p&gt;Sharing good Greedy problems for practice:&lt;br&gt;List: &lt;a href=&#34;https://leetcode.com/list/xyehq5j6&#34;&gt;https://leetcode.com/list/xyehq5j6&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sort&amp;#x2F;Array&lt;/strong&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/jump-game/&#34;&gt;https://leetcode.com/problems/jump-game/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/jump-game-ii/&#34;&gt;https://leetcode.com/problems/jump-game-ii/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/gas-station/&#34;&gt;https://leetcode.com/problems/gas-station/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/candy/&#34;&gt;https://leetcode.com/problems/candy/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/remove-k-digits/&#34;&gt;https://leetcode.com/problems/remove-k-digits/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/wiggle-subsequence/&#34;&gt;https://leetcode.com/problems/wiggle-subsequence/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/assign-cookies/&#34;&gt;https://leetcode.com/problems/assign-cookies/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/boats-to-save-people/&#34;&gt;https://leetcode.com/problems/boats-to-save-people/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/bag-of-tokens/&#34;&gt;https://leetcode.com/problems/bag-of-tokens/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients/&#34;&gt;https://leetcode.com/problems/number-of-burgers-with-no-waste-of-ingredients/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/queue-reconstruction-by-height/&#34;&gt;https://leetcode.com/problems/queue-reconstruction-by-height/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/play-with-chips/&#34;&gt;https://leetcode.com/problems/play-with-chips/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/previous-permutation-with-one-swap/&#34;&gt;https://leetcode.com/problems/previous-permutation-with-one-swap/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/lemonade-change/&#34;&gt;https://leetcode.com/problems/lemonade-change/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/bag-of-tokens/&#34;&gt;https://leetcode.com/problems/bag-of-tokens/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hash&amp;#x2F;Multi-set:&lt;/strong&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/task-scheduler/&#34;&gt;https://leetcode.com/problems/task-scheduler/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/partition-labels/&#34;&gt;https://leetcode.com/problems/partition-labels/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/car-pooling/&#34;&gt;https://leetcode.com/problems/car-pooling/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/&#34;&gt;https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/&#34;&gt;https://leetcode.com/problems/group-the-people-given-the-group-size-they-belong-to/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/cinema-seat-allocation/&#34;&gt;https://leetcode.com/problems/cinema-seat-allocation/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/construct-k-palindrome-strings/&#34;&gt;https://leetcode.com/problems/construct-k-palindrome-strings/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/advantage-shuffle/&#34;&gt;https://leetcode.com/problems/advantage-shuffle/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Strings:&lt;/strong&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/reorganize-string/&#34;&gt;https://leetcode.com/problems/reorganize-string/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/string-without-aaa-or-bbb/&#34;&gt;https://leetcode.com/problems/string-without-aaa-or-bbb/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/check-if-a-string-can-break-another-string/&#34;&gt;https://leetcode.com/problems/check-if-a-string-can-break-another-string/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/remove-duplicate-letters/&#34;&gt;https://leetcode.com/problems/remove-duplicate-letters/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Heap:&lt;/strong&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/last-stone-weight/&#34;&gt;https://leetcode.com/problems/last-stone-weight/&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/reduce-array-size-to-the-half/&#34;&gt;https://leetcode.com/problems/reduce-array-size-to-the-half/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stack:&lt;/strong&gt;&lt;br&gt;&lt;a href=&#34;https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/&#34;&gt;https://leetcode.com/problems/minimum-add-to-make-parentheses-valid/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sharing solutions for little tricky problems&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/&#34;&gt;https://leetcode.com/problems/divide-array-in-sets-of-k-consecutive-numbers/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bool isPossibleDivide(vector&amp;lt;int&amp;gt;&amp;amp; nums, int k) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int n = nums.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		if (n % k != 0) return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int ssize = n/k;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		map&amp;lt;int, int&amp;gt;hm;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (int i = 0; i &amp;lt; n; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			hm[nums[i]]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (auto it = hm.begin(); it != hm.end(); it++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (hm[it-&amp;gt;first] &amp;gt; 0) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				for (int i = k-1; i &amp;gt;= 0; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					hm[it-&amp;gt;first+i] -= hm[it-&amp;gt;first];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;					if (hm[it-&amp;gt;first+i] &amp;lt; 0)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;						return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/car-pooling/&#34;&gt;https://leetcode.com/problems/car-pooling/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	bool carPooling(vector&amp;lt;vector&amp;lt;int&amp;gt;&amp;gt;&amp;amp; trips, int capacity) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int trip_len = 1001;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		vector&amp;lt;int&amp;gt;stops(trip_len, 0);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (int i = 0; i &amp;lt; trips.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			stops[trips[i][1]] += trips[i][0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			stops[trips[i][2]] -= trips[i][0];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (int i = 0; i &amp;lt; trip_len; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (i != 0) stops[i] += stops[i-1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (stops[i] &amp;gt; capacity)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				return false;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return true;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/reorganize-string/&#34;&gt;https://leetcode.com/problems/reorganize-string/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	static bool compare(pair&amp;lt;char, int&amp;gt;p1, pair&amp;lt;char, int&amp;gt;p2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return p1.second &amp;gt; p2.second;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	string reorganizeString(string S) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int n = S.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		unordered_map&amp;lt;char, int&amp;gt;m;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		vector&amp;lt;pair&amp;lt;char, int&amp;gt;&amp;gt;v;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (int i = 0; i &amp;lt; n; i++) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			m[S[i]]++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for(auto it = m.begin(); it != m.end(); it++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (it-&amp;gt;second &amp;gt; (n+1)/2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				return &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			v.push_back(make_pair(it-&amp;gt;first, it-&amp;gt;second));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		sort(v.begin(), v.end(), compare);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		string str;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (int i = 0; i &amp;lt; v.size(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			while (v[i].second--)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				str += v[i].first;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		string ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int size = str.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int i = 0, j = (size-1)/2+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		while (i &amp;lt; (size-1)/2+1) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ans += str[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			ans += str[j];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			i++; j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return ans;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://leetcode.com/problems/candy/&#34;&gt;https://leetcode.com/problems/candy/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;class Solution &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	int candy(vector&amp;lt;int&amp;gt;&amp;amp; ratings) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int n = ratings.size();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		vector&amp;lt;int&amp;gt;left(n, 1); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (int i = 1; i &amp;lt; n; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (ratings[i] &amp;gt; ratings[i-1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				left[i] = left[i-1]+1;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		int sum = left[n-1];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		for (int i = n-2; i &amp;gt;= 0; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			if (ratings[i] &amp;gt; ratings[i+1])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;				left[i] = max(left[i], left[i+1]+1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;			sum += left[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		return sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
    </channel>
</rss>
