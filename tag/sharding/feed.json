{
    "version": "https://jsonfeed.org/version/1",
    "title": "Samir Paul • All posts by \"sharding\" tag",
    "description": "Here I write content about Computer Science, Data Structures Algorithms, Networking, Artificial Intelligence and Coding Interview Preparation.",
    "home_page_url": "https://samirpaul1.github.io",
    "items": [
        {
            "id": "https://samirpaul1.github.io/posts/sharding-or-data-partitioning/",
            "url": "https://samirpaul1.github.io/posts/sharding-or-data-partitioning/",
            "title": "Sharding or Data Partitioning",
            "date_published": "2023-08-05T20:52:53.876Z",
            "content_html": "<h1 id=\"Sharding-Data-Partitioning\"><a href=\"#Sharding-Data-Partitioning\" class=\"headerlink\" title=\"Sharding &#x2F; Data Partitioning\"></a>Sharding &#x2F; Data Partitioning</h1><h2 id=\"Partitioning-methods\"><a href=\"#Partitioning-methods\" class=\"headerlink\" title=\"Partitioning methods\"></a>Partitioning methods</h2><ul>\n<li>Horizontal partitioning<ul>\n<li>Range based sharding.</li>\n<li>Put different rows into different tables.</li>\n<li>Con<ul>\n<li>If the value whose range is used for sharding isn’t chosen carefully, the partitioning scheme will lead to unbalanced servers.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Vertical partitioning<ul>\n<li>Divide data for a specific feature to their own server.</li>\n<li>Pro<ul>\n<li>Straightforward to implement.</li>\n<li>Low impact on the application.</li>\n</ul>\n</li>\n<li>Con<ul>\n<li>To support growth of the application, a database may need further partitioning.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Directory-based partitioning<ul>\n<li>A lookup service that knows the partitioning scheme and abstracts it away from the database access code.</li>\n<li>Allow addition of db servers or change of partitioning schema without impacting application.</li>\n<li>Con<ul>\n<li>Can be a single point of failure.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Partitioning-criteria\"><a href=\"#Partitioning-criteria\" class=\"headerlink\" title=\"Partitioning criteria\"></a>Partitioning criteria</h2><ul>\n<li>Key or hash-based partitioning<ul>\n<li>Apply a hash function to some key attribute of the entry to get the partition number.</li>\n<li>Problem<ul>\n<li>Adding new servers may require changing the hash function, which would need redistribution of data and downtime for the service.</li>\n<li>Workaround: <a href=\"https://en.wikipedia.org/wiki/Consistent_hashing\">consistent hashing</a>.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>List partitioning<ul>\n<li>Each partition is assigned a list of values.</li>\n</ul>\n</li>\n<li>Round-robin partitioning<ul>\n<li>With <code>n</code> partitions, the <code>i</code> tuple is assigned to partition <code>i % n</code>.</li>\n</ul>\n</li>\n<li>Composite partitioning<ul>\n<li>Combine any of above partitioning schemes to devise a new scheme.</li>\n<li>Consistent hashing is a composite of hash and list partitioning.<ul>\n<li>Key -&gt; reduced key space through hash -&gt; list -&gt; partition.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Common-problems-of-sharding\"><a href=\"#Common-problems-of-sharding\" class=\"headerlink\" title=\"Common problems of sharding\"></a>Common problems of sharding</h2><p>Most of the constraints are due to the fact that operations across multiple tables or multiple rows in the same table will no longer run on the same server.</p>\n<ul>\n<li>Joins and denormalization<ul>\n<li>Joins will not be performance efficient since data has to be compiled from multiple servers.</li>\n<li>Workaround: denormalize the database so that queries can be performed from a single table. But this can lead to data inconsistency.</li>\n</ul>\n</li>\n<li>Referential integrity<ul>\n<li>Difficult to enforce data integrity constraints (e.g. foreign keys).</li>\n<li>Workaround<ul>\n<li>Referential integrity is enforced by application code.</li>\n<li>Applications can run SQL jobs to clean up dangling references.</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Rebalancing<ul>\n<li>Necessity of rebalancing<ul>\n<li>Data distribution is not uniform.</li>\n<li>A lot of load on one shard.</li>\n</ul>\n</li>\n<li>Create more db shards or rebalance existing shards changes partitioning scheme and requires data movement.</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "blog",
                "coding",
                "computer-science",
                "system-design",
                "design-interview",
                "sql",
                "nosql",
                "sharding",
                "data-partitioning"
            ]
        }
    ]
}